<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- 加载properties文件中的内容，文件中的key命名要有一定的特殊规则 -->
    <bean class="com.johnfnash.study.util.SystemPropConfigurer">
        <property name="locations" value="classpath:datasource.properties"/>
        <property name="fileEncoding" value="UTF-8"/>
    </bean>
    <!-- 使用下面的无法读取到配置??? -->
    <!-- <context:property-placeholder location="classpath:datasource.properties" file-encoding="UTF-8"/>
	 -->
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${driverClassName}"/>
        <property name="url" value="${url}" />
        <property name="username" value="${username}" />
        <property name="password" value="${password}" />

        <property name="maxActive" value="20" />
        <property name="initialSize" value="1" />
        <property name="maxWait" value="60000" />
        <property name="minIdle" value="1" />

        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="testWhileIdle" value="true" />
        <!-- 这里建议配置为TRUE，防止取到的连接不可用???? true 时不可用 --> 
  		<property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <property name="poolPreparedStatements" value="true" />
        <property name="maxOpenPreparedStatements" value="20" />
        
        <property name="filters" value="stat,wall" />
        
        <!-- SQL合并配置,慢SQL记录  -->
  		<property name="connectionProperties" value="druid.stat.mergeSql=true,druid.stat.slowSqlMillis=1000" />
  		
  		<property name="proxyFilters">
	        <list>
	            <ref bean="log-filter"/>
	        </list>
	    </property>
    </bean>

	<!-- sqlSessinFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 加载mybatis的全局配置文件 -->
        <property name="configLocation" value="classpath:sqlMapConfig.xml" />
        <!-- 数据库连接池 -->
        <property name="dataSource" ref="dataSource" />        
        <property name="mapperLocations" value="classpath:mappers/*.xml" />
    </bean>
    
    <!-- mapper扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描包路径，如果需要扫描多个包，中间使用半角逗号隔开  -->
        <property name="basePackage" value="com.johnfnash.study.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
     
    <!-- 事务管理器
         对mybatis操作数据库事务控制，spring使用jdbc的事务控制类
      -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>    
    </bean>
    
    <!-- 通知  -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 传播行为 -->
            <!-- 可以变相的规范程序员的命名，例如以save开头，update开头等，不能想怎么命名就怎么命名 -->
            <tx:method name="save*" propagation="REQUIRED"/><!-- 要求 -->
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/> <!-- 支持，如果没有就算了 -->
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    
    <!-- aop -->
    <aop:config>
        <!-- 切入点为joanna.yan.ssm.service.impl包下所有类的所有方法，不管里面什么参数 -->
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.johnfnash.study.service.impl.*.*(..))"/>
    </aop:config>
    
    <!-- 输出可执行的SQL -->
    <bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4j2Filter">
    	<property name="connectionLogEnabled" value="false"/>
        <property name="statementLogEnabled" value="false" />
        <property name="resultSetLogEnabled" value="true" />
        <property name="statementExecutableSqlLogEnable" value="true"/>
  	</bean>
    
</beans>        